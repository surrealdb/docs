{
  "usageHeading": "Start the database server",
  "usage": "surreal start [OPTIONS] [PATH]>",
  "args": "[PATH]  Database path used for storing data [env: SURREAL_PATH=] [default: memory]",
  "options": [
    {
      "option": " -l, --log <LOG> ",
      "description": "The logging level for the database server [env: SURREAL_LOG=] [default: info] [possible values: none,full, error, warn, info, debug, trace]"
    },
    {
      "option": "--no-banner",
      "description": "Whether to hide the startup banner [env: SURREAL_NO_BANNER=]"
    },
    {
      "option": "-h, --help",
      "description": "Print help information"
    }
  ],
  "database": [
    {
      "database": "--tick-interval <TICK_INTERVAL>",
      "description": " The interval at which to run node agent tick (including garbage collection) [env: SURREAL_TICK_INTERVAL=][default: 10s]"
    },
    {
      "database": "-s, --strict",
      "description": "Whether strict mode is enabled on this database instance [env: SURREAL_STRICT=]"
    },
    {
      "database": "--query-timeout <QUERY_TIMEOUT>",
      "description": "The maximum duration that a set of statements can run for [env:SURREAL_QUERY_TIMEOUT=]"
    },
    {
      "database": "--transaction-timeout <TRANSACTION_TIMEOUT>",
      "description": "The maximum duration that any single transaction can run for [env: SURREAL_TRANSACTION_TIMEOUT=]"
    },
    {
      "database": "--temporary-directory <TEMPORARY_DIRECTORY>",
      "description": "Sets the directory for storing temporary files [env: SURREAL_TEMPORARY_DIRECTORY=]"
    }
  ],
  "authentication": [
    {
      "authentication": "-u, --username <USERNAME>",
      "description": " The username for the initial database root user. Only if no other root user exists [env:SURREAL_USER=] [aliases: user]"
    },
    {
      "authentication": "-p, --password <PASSWORD>",
      "description": "The password for the initial database root user. Only if no other root user exists [env:SURREAL_PASS=] [aliases: pass]"
    },
    {
      "authentication": "--auth",
      "description": "Whether to enable authentication [env: SURREAL_AUTH=]"
    }
  ],
  "Datastore_connection": [
    {
      "Datastore_connection": "--kvs-ca <KVS_CA> ",
      "description": "Path to the CA file used when connecting to the remote KV store [env: SURREAL_KVS_CA=]"
    },
    {
      "Datastore_connection": "--kvs-crt <KVS_CRT>",
      "description": "Path to the certificate file used when connecting to the remote KV store [env:SURREAL_KVS_CRT=]"
    },
    {
      "Datastore_connection": "--kvs-key <KVS_KEY>",
      "description": " Path to the private key file used when connecting to the remote KV store [env:SURREAL_KVS_KEY=]"
    }
  ],
  "http_server": [
    {
      "http_server": "--web-crt <WEB_CRT> ",
      "description": "Path to the certificate file for encrypted client connections [env: SURREAL_WEB_CRT=]"
    },
    {
      "http_server": "--web-key <WEB_KEY>",
      "description": "Path to the private key file for encrypted client connections [env: SURREAL_WEB_KEY=]"
    },
    {
      "http_server": " --client-ip <CLIENT_IP>",
      "description": " The method of detecting the client's IP address [env: SURREAL_CLIENT_IP=] [default:socket] [possible values: none, socket, CF-Connecting-IP, Fly-Client-IP,True-Client-IP, X-Real-IP, X-Forwarded-For]"
    },
    {
      "http_server": "-b, --bind <LISTEN_ADDRESSES>",
      "description": "The hostname or ip address to listen for connections on [env: SURREAL_BIND=] [default:0.0.0.0:8000]"
    }
  ],
  "capabilities": [
    {
      "capabilities": " -A, --allow-all [<ALLOW_ALL>...]",
      "description": "Allow all capabilities [env: SURREAL_CAPS_ALLOW_ALL=] [possible values:true, false]"
    },
    {
      "capabilities": "--allow-scripting [<ALLOW_SCRIPTING>...]",
      "description": "Allow execution of scripting functions [env: SURREAL_CAPS_ALLOW_SCRIPT=][possible values: true, false]"
    },
    {
      "capabilities": " --allow-guests [<ALLOW_GUESTS>...]",
      "description": "Allow guest users to execute queries [env: SURREAL_CAPS_ALLOW_GUESTS=][possible values: true, false]"
    },
    {
      "capabilities": "--allow-funcs [<ALLOW_FUNCS>...]",
      "description": "Allow execution of all functions. Optionally, you can provide a comma-separated list of function names to allow [env:SURREAL_CAPS_ALLOW_FUNC=]"
    },
    {
      "capabilities": " --allow-net [<ALLOW_NET>...] ",
      "description": " Allow all outbound network access. Optionally, you can provide a comma-separated list of targets to allow [env: SURREAL_CAPS_ALLOW_NET=]"
    },
    {
      "capabilities": "-D, --deny-all [<DENY_ALL>...]",
      "description": "Deny all capabilities [env: SURREAL_CAPS_DENY_ALL=] [possible values:true, false]"
    },
    {
      "capabilities": " --deny-scripting [<DENY_SCRIPTING>...]",
      "description": "Deny execution of scripting functions [env: SURREAL_CAPS_DENY_SCRIPT=][possible values: true, false]"
    },
    {
      "capabilities": " --deny-guests [<DENY_GUESTS>...]",
      "description": "Deny guest users to execute queries [env: SURREAL_CAPS_DENY_GUESTS=][possible values: true, false]"
    },
    {
      "capabilities": "--deny-funcs [<DENY_FUNCS>...]",
      "description": "Deny execution of all functions. Optionally, you can provide a comma-separated list of function names to deny [env:SURREAL_CAPS_DENY_FUNC=]"
    },
    {
      "capabilities": " --deny-net [<DENY_NET>...]",
      "description": "Deny all outbound network access. Optionally, you can provide a comma-separated list of targets to deny [env: SURREAL_CAPS_DENY_NET=]"
    }
  ]
}
